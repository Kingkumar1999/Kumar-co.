import time
import sys
import random
import numpy as np

class Player:
  """The data for the players."""
  def __init__(self, name, hp, atk):
        self.name = name
        self.health = hp
        self.maxHealth = hp
        self.attackPower = atk
        self.life = True
        self.attackDamage = 0
        self.skills= []
        self.aura=1
        self.types= "Normal"
        self.limitcount = 0
  def use_move(self, target, move):
        move.applyMove(self,target)
  def add_move(self, move):
        self.skills.append(move)
        print("%s has learned %s!"%(self.name,move))
        for x in skills.instances:
          if x.name == move:
            print(x.discription)
            break
        time.sleep(3)
        print(" ")
  def powerUp(self, newAura):
        self.aura = newAura
  def add_type(self,Element):
        self.types = Element
        print("%s is a %s type!"%(self.name,Element))

class skills:
  """The general data for the skills."""
  instances = []
  def __init__(self, name, power, discription):
    self.name = name
    self.power = power
    self.discription = discription
    self.__class__.instances.append(self)
  def desc(self):
    print(self.discription)

class damaging(skills):
  """The  data for damaging skills."""
  def applyMove(self, user, target):
    print("%s used %s, dealing damage!"%(user.name,self.name))
    print(" ")
    user.attackDamage = self.power * user.attackPower * user.aura
    damageDone = user.attackDamage * typeMatchup(user.types,target.types)
    target.health -= damageDone
    if typeMatchup(user.types,target.types)==2:
      print("The attack was super effective!")
    elif typeMatchup(user.types,target.types)==0.5:
      print("The attack was not very effective...")
    print(" ")
    print("%s's health has been reduced to %d."%(target.name,target.health))
    if target.health < 1:
      target.life = False
    
class healing(skills):
  """The  data for healing skills."""
  def applyMove(self, user, target):
    print("%s used %s, recovering some hp!"%(user.name,self.name))
    user.attackDamage = self.power * user.aura
    target.health += user.attackDamage
    print("%s's health has been increased to %d."%(target.name,target.health))
    
class draining(skills):
  """The  data for draining skills."""
  def applyMove(self, user, target):
    print("%s used %s, draining some health!"%(user.name,self.name))
    print(" ")
    user.attackDamage = self.power * user.attackPower * user.aura
    damageDone = user.attackDamage * typeMatchup(user.types,target.types)
    target.health -= user.attackDamage
    user.health += 0.5 * damageDone
    if typeMatchup(user.types,target.types)==2:
      print("The attack was super effective!")
    elif typeMatchup(user.types,target.types)==0.5:
      print("The attack was not very effective...")
    print("%s's health has been reduced to %d and %s's health was increased to %d"%(target.name, target.health, user.name, user.health))
    print(" ")
    if target.health < 1:
      target.life = False
      
class defending(skills):
  """The data for defending skills."""
  def applyMove(self, user, target):
    print("%s used %s, reducing enemy attack power!"%(user.name,self.name))
    print(" ")
    user.attackDamage = self.power * user.attackPower * user.aura
    damageDone = user.attackDamage * typeMatchup(user.types,target.types)
    target.health -= damageDone
    target.attackPower = target.attackPower * 0.75
    if typeMatchup(user.types,target.types)==2:
      print("The attack was super effective!")
    elif typeMatchup(user.types,target.types)==0.5:
      print("The attack was not very effective...")
    print("%s's health has been reduced to %d."%(target.name,target.health))
    print(" ")
    if target.health < 1:
      target.life = False

class dualhit(skills):
  """The data for dual hitting skills."""
  def applyMove(self, user, target):
    print("%s used %s, hitting twice!"%(user.name,self.name))
    print(" ")
    chance = np.random.uniform(0.2, 0.6)
    user.attackDamage = self.power * user.attackPower * user.aura
    damageDone = (chance * user.attackDamage * typeMatchup(user.types,target.types)) + (chance * user.attackDamage * typeMatchup(user.types,target.types))
    target.health -= damageDone
    if typeMatchup(user.types,target.types)==2:
      print("The attack was super effective!")
    elif typeMatchup(user.types,target.types)==0.5:
      print("The attack was not very effective...")
    print("%s's health has been reduced to %d."%(target.name,target.health))
    print(" ")
    if target.health < 1:
      target.life = False
      
class limitbreak(skills):
  """the data for special moves"""
  def applyMove(self, user, target):
    if LimitAchieve == True:
      if user.limitcount >= 5:
        print("%s used %s, unleashing a full elemental power!"%(user.name,self.name))
        print(" ")
        user.attackDamage = self.power * user.attackPower * user.aura
        damageDone = user.attackDamage * typeMatchup(user.types,target.types)
        target.health -= damageDone
        if typeMatchup(user.types,target.types)==2:
          print("The attack was super effective!")
        elif typeMatchup(user.types,target.types)==0.5:
          print("The attack was not very effective...")
        print(" ")
        print("%s's health has been reduced to %d."%(target.name,target.health))
        if target.health < 1:
          target.life = False
      else:
        time.sleep(1)
        print(" ")
        print("Your limit break is not ready yet!")
      
def battle(guy,  NME):
  print(" ")
  print("The battle between %s and %s commences!"%(guy.name,NME.name))
  while True:
    i = 0
    while i==0:
      print("Skills available to you:")
      for x in guy.skills:
        print(x)
      move = input("Which skill do you want to use?")
      for x in skills.instances:
        if x.name == move and x.name in guy.skills:
          if isinstance(x, healing):
            guy.use_move(guy,x)
          else:
            guy.use_move(NME,x)
          i = 1
          break 
    if NME.life==False:
      print("%s has won the battle!"%guy.name)
      print("You defeated the %s! You found a potion! All hp restored!"%NME.name)
      P1.health = P1.maxHealth
      break
    move = random.choice(NME.skills)
    for x in skills.instances:
        if x.name == move:
          if isinstance(x, healing):
            NME.use_move(NME,x)
          else:
            NME.use_move(guy,x)
          i = 1
          break
    if guy.life==False:
      print("%s was slain in battle! You lost the game!"%guy.name)
      sys.exit()
    if LimitAchieve == True:
      guy.limitCount = guy.limitCount + 1
      print(" ")
      print("%s charges."%guy.limitCount)

Wildfire= damaging("Wildfire", 2, "A small fire that burns enemies.")
Splash = damaging("Splash", 1.5, "A jet of water that damages enemies.")
Tremor = damaging("Tremor", 2, "A small quake that makes enemies tremble.")
Gust = damaging("Gust", 1.5, "A windy blast that blows enemies away.")
Flash = damaging("Flash", 1.5, "A weak flash of light that hurts enemies.")
Astonish = damaging("Astonish", 2, "A sudden movement that scares of enemies.")
Meme = damaging("Meme", 2, "A dank meme that makes enemies angry.")
BoulderDrop = damaging("Boulder Drop", 1, "Rocks used by the stone golem to attack the player.")
GoblinKnife = dualhit("GoblinKnife", 1, "The goblin's knife used to attack the player.")
Flames_of_Exile = damaging("Flames of Exile", 1, "A magical flame used to attack the player.")
Hellwheel = damaging("Hellwheel", 2.5, "A bright-red flaming wheel rolling over targets to burn them to crisps.")
Woodslam = damaging("Woodslam", 2, "The user's entire body is covered in solid wood, and is slung towards the enemy.")
Airjet = damaging("Airjet", 2, "A powerful wind that knocks down enemies.")
Roast = damaging("Roast", 2.5, "An epic roast to pester enemies and make them angry.")
ThiefBash = dualhit("ThiefBash", 1, "A bash with a mace used by the thief to attack the player.")
Purify = healing("Purify", 2, "A healing current of water that purifies any toxins and regenerates the player.")
Healing = healing("Healing", 2, "A holy veil of light that envelops the player and heals any wounds.")
Lifedrain = draining("Lifedrain", 2, "A sinister move in which the player drains their enemy's lifeforce in order to restore their own hp.")
GreatswordSlash = damaging("Greatsword Slash", 1.5, "A slash with a big sword used by The Black Knight to attack the player.") 
ToxicFangs = draining("ToxicFangs", 1, "A spider's attack making use of fangs covered in toxins to attack the player and drain some health from them")
Rest = healing("Rest", 2, "An creature's skill to sleep for a short time in order to recover some hp back")
Swarm = damaging("Swarm", 2, "An attack in which a creature commands it's followers to attack the player")
TotemsFlashofLife = damaging("Totem's Flash of Life", 1, "The Forest Totem's signature attack in which it uses the aura of life to strike down the player")
Lavaflux = damaging("Lavaflux", 3, "A wave of lava controlled by a magnetic flux that engulves the enemy")
Frostbite = draining("Frostbite", 2, "A barrage of magical ice spikes that lash into the enemy and transfer some hp to the player")
Quicksand = defending("Quicksand", 2, "A maelstrom of sand that swirls around the enemy to inflict damage and reduce their damage output")
Tornado = defending("Tornado", 2, "A maelstrom of wind that traps the enemy and slings them around for damage, and reduces their attackpower")
Lightspear = damaging("Lightspear", 2, "A spear made out of pure light that pierces enemies and purifies their soul from any sins")
Riftsplit = dualhit("Riftsplit", 2.5, "The player tears the enemy apart by beaming dark energy through their bodies")
Smokeweed = healing("Smokeweed", 2, "The player lights up some weed to smoke, and recovers some hp")
ClawSmack = damaging("ClawSmack", 1.25, "A giant claw is smacked onto the player to inflict damage")
Constrict = defending("Constrict", 1.5, "Tentacles or other long objects used to wrap the player for damage and reduce their attack output")
DemigodWingAttack = dualhit("Demigod Wing Attack", 1.75, "The signature attack of all demigods, where they use their wings to strike the player")
Cut = dualhit("Cut", 1.25, "A standard move that uses a sharp object to cut something into pieces")
LeviathanHydroStorm = damaging("Leviathan Hydro Storm", 2, "A huge storm of water, ice and lightning conjured by the Leviathan to test the player's worth")
Ignite = defending("Ignite", 2.5, "A long-lasting flame that wears down enemies and lowers their attack power")
Whirlpool = damaging("Whirlpool", 2.5, "A maelstrom of water that traps foes and inflicts damage")
Gaiaslide = damaging("Gaiaslide", 2.5, "A wave of land that engulves enemies and does damage")
Lightning = damaging("Lightning", 2.5, "A very hot lightningbolt that strikes upon enemies and scorches them for damage")
Deityblade = dualhit("Deityblade", 2.5, "A blade sent from the heavens self, that can pierce any enemy and inflicts damage")
Bloodlust = draining("Bloodlust", 2.5, "Drives the player into a frenzy that makes them inflict damage on enemies and drain their blood to recover some hp") 
Swagburn = defending("Swagburn,", 2.5, "A sick and epic burn that makes the enemy less willing to fight, and drops their attack power")
Slash = damaging("Slash", 1, "A non-attribute attack that involves slashing the enemy with sharp claws to deal damage")
CrystalJab = draining("Crystal Jab", 2, "Magical crystals are used to jab the foe to inflict damage and drain some hp with those crystals to recover some hp")
FoulMiasma = defending("Foul Miasma", 1.25, "A horrible poisonous breath that weakens the enemy's attack power")
EagleSkyCrash = damaging("Eagle Sky Crash", 2, "The user soars into the sky, then drops to greatly increase their speed and strike the foe with massive force")
Combustion = damaging("Combustion", 3, "A large explosion that heavily scorches enemies to the bone")
Drainage = healing("Drainage", 3, "The user absorbs nutrients from the water that restore some hp")
Stonetomb = defending("Stone tomb", 3, "The user summons massive stones that crash upon the enemy and bury it alive to weaken them")
Vortex = defending("Vortex", 3, "The user conjures a fast-whirling air current that slings around enemies and confuses them to weaken their attack power")
Blessing = healing("Blessing", 3, "Praying to the gods, the user gains their blessing and has some of their hp restored")
Darkeclipse = damaging("Dark eclipse", 3, "The user drains power from the universe's dark energy, and beams it through foes to inflict heavy damage")
Memeoverdose = damaging("Meme overdose", 3, "The user shows several dank memes to the target to annoy them so much that these memes start to hurt them")
Arrowfire = dualhit("Arrowfire", 1.25, "The user uses a bow and fires of a couple of arrows to pierce the target and inflict damage")
Brewing = healing("Brewing", 2.5, "The user uses their knowledge of alchemy to brew a potion and consume it to restore hp")
MonolithBeam = dualhit("Monolith Beam", 3, "A barrage of powerful elemental beams mainly used by elementals")
InfernoMeteor = limitbreak("Inferno meteor", 6, "Using a limit break, the user summons a shower of flaming meteors from the sky to bombard enemies")
OceanTempest = limitbreak("Ocean tempest", 6, "Using a limit break, the player uses an ancient strength to create a massive storm of water and lightning that washes away enemies")
VolcanicCore = limitbreak("Volcanic core", 6, "Using a limit break, the user uses the power of the very earth itself and engulves the enemy in a eruption of magma and molten metals")
ThunderSky = limitbreak("Thunder sky", 6, "Using a limit break, the user summons thunder and lightning, and heats up the air so much that it melts even steel")
Genesis = limitbreak("Genesis", 6, "Using a limit break, the user calls upon the heavens, and uses a massive weapon of light to wipe out enemies")
BlackHole = limitbreak("Black hole", 6, "Using a limit break, the user throws the enemy into a black hole that rips even space and time")
Threesixty = limitbreak("360 noscope", 6, "Using a limit break, the user pulls out a bow, turns 360 degrees and hits the enemy in the head")
        
def elementTxt(t):
  switcher = {
    'Fire': "So you choose fire, you must be a fiery person then(no puns intended). You have a lot of firepower, but you can get angered quickly. Your class is: [ATTACK], skills are: [Wildfire]",
    'Water': "So you choose water eh? You like to swim a lot, do you? You are a tender person that cares for others. Your class is: [SUPPORT], skills are: [Splash]",
    'Earth': "You choose earth, the best element jk. You are a strong and worthy person, and you can lift boulders and other stuff. Your class is: [DEFENSE], skills are: [Tremor]",
    'Air': "Air?! Is that even a natural element?! Of course it is! Remember: don't crash into mountains! Your class is: [DEFENSE], skills are: [Gust]",
    'Light': "Your choice is light, a noble element with honour. We expect you to have such honour as well, otherwise the gods will punish you! Your class is: [SUPPORT], skills are: [Flash]",
    'Darkness': "You didn't choose the dark, the dark choose you! You are afraid of sunlight, but you can see other's weaknesses, that's cool i guess. Your class is: [ATTACK], skills are: [Astonish]",
    'Swag': "Damn son, you are a memable person indeed. You found the secret element. You got the power of swag. Your class is: [ATTACK], skills are: [Meme]",
  }
  return switcher.get(t)
  
def typeMatchup(type1,type2):
  combo = "%s%s"%(type1,type2)
  switcher = {
    "FireEarth":2,
    "EarthAir":2,
    "AirWater":2,
    "WaterFire":2,
    "LightDarkness":2,
    "DarknessLight":2,
    "FireWater":0.5,
    "WaterAir":0.5,
    "AirEarth":0.5,
    "EarthFire":0.5,
    "SwagSwag":2,
  }
  return switcher.get(combo,1)

SecretP = False
LimitAchieve = False

directions = ["Left", "Right", "Straight", "l", "s", "r"]
directions2 = ["Left","Right", "l", "r"]
types = ['Fire','Water','Earth','Air','Light','Darkness','Swag']
directions3 = ["Left", "Right", "Straight", "l", "s", "r"]

def Moves (num):
  allskills = {
   'Fire': ["Wildfire", "Hellwheel", "Lavaflux", "Ignite", "Combustion", "Inferno meteor"],
   'Water': ["Splash", "Purify", "Frostbite", "Whirlpool", "Recover", "Ocean tempest"],
   'Earth': ["Tremor", "Woodslam", "Quicksand", "Gaiaslide", "Stone tomb", "Volcanic core"],
   'Air': ["Gust", "Airjet", "Tornado", "Lightning", "Air Vortex"],
   'Light': ["Flash", "Healing", "Lightspear", "Deityblade", "Blessing"],
   'Darkness': ["Astonish", "Lifedrain", "Riftsplit", "Bloodlust", "Dark eclipse"],
   'Swag': ["Meme", "Roast", "Smokeweed", "Swagburn", "Meme overdose", "360 noscope"],
   'Unknown': [],
   'Normal': [],
  }
  return allskills.get(BasicElement)[num-1]
  
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

print("WARNING: Don't type anything unless you are told to.")
print(" ")
time.sleep(3)

print ("Welcome to Earth, a beautiful planet full of life...")

time.sleep(3)

while True:
  nick = input("Hello there! What is your name?")
  if len(nick) > 0:
    if nick == "Cesar":
      print("So your name is %s! That is a really good name!"%nick)
    elif nick =="Owen":
      print("So your name is %s! You remind me of someone..."%nick)
    else:  
      print ("So your name is %s!"%nick)
    P1= Player(nick, 3, 1)
    break
  else:
    print ("Try again, my friend :)")

time.sleep(3)    
print(" ")
if nick == "One Punch Man":
  print("Welcome Owen or Cesar! Time to test the code!")
  P1.attackPower = P1.attackPower + 500
  print(" ")
  print("You now have %s attack."%P1.attackPower)
time.sleep(3)
print(" ")
  
while (True):
  BasicElement = input("In ancient times, there have been six elements of nature: Fire, Water, Earth, Air, Light and Darkness. Which element do you feel most connected with?")
  if BasicElement in types:
    print(" ")
    print(elementTxt(BasicElement))
    time.sleep(1)
    P1.add_type(BasicElement)
    print(" ")
    P1.add_move(Moves(1))
    print(" ")
    P1.add_move(Moves(2))
    time.sleep(1)
    break
  else:
    print ("Try again, my friend :)")
print(" ")
print ("And so, your adventure and quest begins...")
time.sleep(3)
while True:
  Dungeon1choice =  input("300 a.c. You are in a dungeon. You walk until you find a passageway with three ways, one left, one right, and one straight before you. Which way should you go? Left, Right or Straight?")
  if Dungeon1choice in directions:
    print (" ")
    print("You took the %s path."%Dungeon1choice)
    time.sleep(1)
    if Dungeon1choice == 'Left' or Dungeon1choice == "l":
      print(" ")
      print ("Oh no! There is a goblin up ahead!")
      P2 = Player("Goblin", 3, 1)
      P2.add_move("GoblinKnife")
      print(" ")
      print("A goblin appeared! He is kinda ugly.")
      battle(P1,P2)
    elif Dungeon1choice == 'Right' or Dungeon1choice == "r":
      print(" ")
      print ("Welp, no enemies ahead! :)")
    else:
      print(" ")
      print ("NO! That is a stone golem up ahead! This will be a difficult fight ;-;")
      P2 = Player("StoneGolem", 5, 0.5)
      P2.add_move("Boulder Drop")
      print(" ")
      print("The stone golem guarding the middle path attacks you!")
      battle(P1,P2)
    break
  else: 
    print ("Try again, my friend :)")
time.sleep(3)
print(" ")
print("You walk out the %s Path. You proceed to the inner tomb..."%Dungeon1choice)
time.sleep(3)
print(" ")
print("You found the inner tomb. You can see all kinds of treasure lying around. Suddenly, you hear a cold and dread voice speaking: 'YOU COME TO STEAL MY TREASURE, AND YOU WILL NOW FEEL MY WRATH!'. Turning around, you see a levitating corpse with a crown. You have no choice but to battle him to get out of here alive...")
P2 = Player("DeadKing",7,1)
P2.add_move("Flames of Exile")
time.sleep(3)
print(" ")
print("The dead king of this tomb has appeared, and attacks you!")
time.sleep(3)
print(" ")
print("However, you can feel an mysterious aura enveloping you. You feel stronger now!")
P1.powerUp(1.5)
battle(P1,P2)
print(" ")
print("The undead king has vanished, leaving no trace behind whatsoever. You gained experience, and leveled up! Your health, attack have increased, and you learned a new skill!")
print(" ")
time.sleep(3)
P1.maxHealth = P1.maxHealth + 4
P1.health = P1.health + 3
P1.attackPower = P1.attackPower + 0.5
print("You have %s hp and %s attack now." %(P1.health, P1.attackPower))
time.sleep(3)
print("You find a secret switch in the tomb, which opens a secret passage. You take the passage, and you arrive in a small hall. You can see a pedestal with a key lying on it. You take the key.")
print(" ")
time.sleep(3)
print("You have gained the Void Key!")
print(" ")
time.sleep(3)
print("As you walk outside, you see a thief standing before you. He says: 'Hand over the good stuff or else!' He is holding a mace. You have to battle him!")
time.sleep(3)
P2 = Player("Ambushing thief", 7, 1.5)
print(" ")
P2.add_move("ThiefBash")
print(" ")
time.sleep(3)

battle(P1, P2)

time.sleep(5)
print(" ")
print("The thief barely stands up after the fight, and runs for his life. Meanwhile, you can see a wall surrounding a castle in the distance. You decide to go to that direction.")
time.sleep(5)
print(" ")
print("You have arrived in the medieval city, strolling around 'till your eye catches a old man meditating in his backyard. You suddenly feel the urge to go and speak with him.")
time.sleep(5)
print(" ")
print("Old man: 'Well hello there youn' whippersnapper! I can see there is something on your mind, mind me to tell what it is?'")
time.sleep(5)
print(" ")
print("%s: 'Well you see, when i was attacked not so long ago, some sort of energy enveloped me, which made me stronger in the proces. But i don't get what is going on.'"%(nick))
time.sleep(5)
print(" ")
print("Old man: 'Oh, you're talkin' about aura's. Well, let me explain it to you, whippersnapper. An aura is a creature's life force that surrounds them and gives them energy to live. However, some people (like you for example, i can see aura's of other people), have extraordinary types of aura's that boost their strength and moral to an extensive height. Do you mind telling me your name?'")
time.sleep(5)
print(" ")
print("%s: 'It is %s.'" %(nick, nick))
time.sleep(5)
print(" ")
print("Old man: 'My goodness, the prophecy has come out! My child, you are destined to save the world! You will need to head to the Drought Desert, so you can be prepared for the final fight! I will come with you!'")
print(" ")
time.sleep(4)
print("%s: '...'" %nick)
print(" ")
time.sleep(3)
print("Old man has joined your party! He has no fighting skills though :(")
time.sleep(3)
print(" ")
print("It's morning now. You and the old man are leaving town, when suddenly, a black knight has arrived. He says: 'STOP RIGHT THERE! I will take that key with me, now hand it over or else!")
time.sleep(5)
print(" ")
print("%s: 'I'd rather fight!'"%nick)
time.sleep(3)
print(" ")
print("Black knight: 'Very well then, prepare to DIE!'")
print(" ")
P2 = Player("Black Knight",10 ,1)
P2.add_move("Greatsword Slash")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Black Knight: 'Augh! I may have lost, but i will return, and when that day comes, you will tremble in fear of me!'The Black Knight leaves.")
time.sleep(3)
print(" ")
print("%s: 'Okay, he's gone. Where do we need to head?'"%nick)
time.sleep(3)
print(" ")
print("Old man: 'We need to pass through Elder Woods first, youngster .'")
time.sleep(3)
print(" ")
print("...")
time.sleep(5)
print(" ")
print("You and the old man have arrived in Elder Woods. It's kinda murky there. %s: 'What is this for eerie and dirty place?'" %nick)
print(" ")
time.sleep(3)
print("Old man: 'These woods are said to contain enormous spiders , that will grab you if you don't watch out for them.'")
time.sleep(3)
print(" ")
print("Suddenly, you see something light-grey lying under a tree, with flies swarming around it. You come closer to take a look, only to see that it turns out to be a decaded body, that has been covered in string. You hear hissing above you.")
time.sleep(5)
print(" ")
print("Old man: 'Watch out! A spider!'")
time.sleep(3)
print(" ")
print("The spider uses it's string to come down. It must be at least 1 meter high, it is enormous. The spider prepares to fight!")
time.sleep(3)
print(" ")
P2 = Player("Wood Spider", 12, 1.5)
P2.add_move("ToxicFangs")
P2.add_move("Rest")
P2.add_type("Darkness")
battle(P1, P2)
print(" ")
time.sleep(3)
print("The spider is heavily wounded, and flees and crawls over the trees to escape. %s: 'Phew, that was close, but i think i have been' - ugh - 'poisoned...'"%nick)
time.sleep(3)
print(" ")
print("Old man: 'Let me use my special purification power to cure that poison, for you, whippersnapper.'")
time.sleep(3)
print(" ")
print("The old man cured your poison!")
print(" ")
time.sleep(3)
print("...")
time.sleep(5)
print(" ")
print("%s and the old man have been walking through the woods for a couple of hours. You have been seeing dead bodies wrapped in string all over the place. %s: 'I don't like the look of this place...'"%(nick, nick))
time.sleep(3)
print(" ")
print("Suddenly, you see a bright light in the distance of the woods. %s and the old man walk towards it, when suddenly, they see a spider much bigger than the other spiders seen and battled so far."%nick)
time.sleep(3)
print(" ")
print("Old man: 'God save us, young un'! That is their spider queen!'")
time.sleep(3)
print(" ")
print("Spider queen: 'YOU HAVE INFILTRATED OUR FOREST, HUMAN! PREPARE TO SUFFER!")
time.sleep(3)
print(" ")
print("The spider queen prepares herself for combat!")
print(" ")
time.sleep(3)
P2 = Player("Spider Queen", 15, 1)
P2.add_move("ToxicFangs")
P2.add_move("Swarm")
P2.add_type("Darkness")
battle(P1, P2)
time.sleep(3)
print(" ")
print("The spider queen recovers, and is about to attack you when suddenly, a green flash of light appears from the distance that scares of the spiders. None of them stayed to attack you or the old man.")
time.sleep(3)
print(" ")
print("%s: 'I wonder why they all fled?'"%nick)
print(" ")
time.sleep(3)
print("Old man: 'They fled from the energy that emanates from that place up ahead. That is probably the place of one of the seven elemental keys. You see, that key you've got there youngster, is the void attribute key, and there are six more attribute keys left. You will need them all in order to open the gate to unleash the evil and defeat it.'")
time.sleep(5)
print(" ")
print("%s: 'That is a lot of information...'"%nick)
time.sleep(3)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("%s and old man arrived at the distant place. It appears to be a sort of shrine surrounded by grass, with a pedestal in the middle of it that can be compared with the one in the dungeon earlier. On the pedestal lies an iron key with green gems and accents in it."%nick)
time.sleep(3)
print(" ")
print("%s: 'There it is! Wait, what is that?!'"%nick)
time.sleep(3)
print(" ")
print("As they approach the shrine, something emerges from the grassy ground. It appears to be made out of wood, and it is partially covered in grass and plants. Some sort of totem has emerged.")
time.sleep(3)
print(" ")
print("The forest guardian totem has layed it's flashing eyes on you! You will need to defeat it in order to gain the Forest Key!")
time.sleep(3)
print(" ")
P2 = Player("Forest Totem", 30, 0.25)
P2.add_move("Totem's Flash of Life")
P2.add_move("Rest")
P2.add_type("Earth")
battle(P1, P2)
time.sleep(3)
print(" ")
print("The totem has been defeated, it steps back into the grassy ground where it came from, and disappears. You walk over to the pedestal, and the Forest key is granted to you!")
time.sleep(3)
print(" ")
print("You have gained the Forest Key! You now have the Void Key and the Forest Key! Unobtained keys left: 5")
time.sleep(3)
print(" ")
print("You have leveled up! Your health and attack have increased, and you've learned a new skill!")
time.sleep(3)
print(" ")
P1.add_move(Moves(3))
P1.maxHealth = P1.maxHealth + 6
P1.attackPower = P1.attackPower + 1
time.sleep(3)
print(" ")
print("You have %s hp and %s attack now." %(P1.maxHealth, P1.attackPower))
time.sleep(3)
print(" ")
print("%s: 'Well that is that, i can see the other way out of the forest, let's go now.'"%nick)
time.sleep(5)
print(" ")
print("...")
print(" ")
time.sleep(3)
print("As they walk out of the forest, they, strangly enough, find themselves on a beach. They can see some tropical trees here and there.")
print(" ")
time.sleep(3)
print("%s: 'I have one question to ask you though. What is your name?'"%nick)
print(" ")
time.sleep(3)
print("Old man: 'It is Greg.'")
print(" ")
time.sleep(3)
print("%s: 'Nice name.'"%nick)
time.sleep(3)
print(" ")
print("Greg: 'I know right?'")
time.sleep(3)
print(" ")
print("%s and Greg walk over the beach, when suddenly, a giant crab and a levitating jellyfish stand in their way. They seem to be threatening our heroes. %s will need to fight them!"%(nick,nick))
time.sleep(3)
print(" ")
print("The giant crab charges towards you! You will need to battle it first!")
print(" ")
time.sleep(3)
P2 = Player("Giant Crab", 14, 1.25)
P2.add_move("ClawSmack")
P2.add_move("Splash")
P2.add_type("Water")
battle(P1, P2)
time.sleep(3)
print(" ")
print("The giant crab skewaddles back into the sea, but now the jellyfish approaches and attacks!")
print(" ")
time.sleep(3)
if nick == "Cesar":
  print("%s: 'Ugh! I hate jellyfish!'"%nick)
time.sleep(3)
print(" ")
P2 = Player("Jellyfish", 15, 0.5)
P2.add_move("Constrict")
P2.add_move("Purify")
P2.add_type("Water")
battle(P1, P2)
time.sleep(3)
print(" ")
print("As the jellyfish is defeated, it flees back into sea.")
time.sleep(3)
print(" ")
print("%s: 'I wonder why they attacked us? Perhaps it is an evil force?'"%nick)
time.sleep(3)
print(" ")
print("Greg: 'It seems that many creatures have taken notice of your presence youngster, the one of the prophecy. We have to be careful.'")
time.sleep(3)
print(" ")
print("As you and Greg walk further on the beach, you can see a white, big lynx sleeping under a palm tree. You approach the lynx and pick it up.")
time.sleep(3)
print(" ")
print("'Meow?'")
time.sleep(2)
print(" ")
Lynxname = input("Greg: 'That is an unusual lynx there, i can sense a peculiar holy aura from it, that i have never seen from any other animal. We should take it with us, since i can't see any owner around here. Do you have a name for the lynx, young whippersnapper?'")
time.sleep(7)
print(" ")
print("%s: 'I'd like to call it %s.'"%(nick, Lynxname)) 
time.sleep(3)
print(" ")
print("%s: 'Mew!'"%Lynxname)
time.sleep(3)
print(" ")
print("Greg: 'Let's move on.'")
time.sleep(3)
print(" ")
print("%s, Greg and %s are walking further down the beach, when suddenly, they hear yelling behind them." %(nick, Lynxname))
time.sleep(3)
print(" ")
print("Black Knight: 'HEY! I'm back for revenge kid! Hand over that key, or i will use my newly awakend power to defeat you!'")
time.sleep(3)
print(" ")
print("%s: 'Oh boy here we go again...'"%nick)
time.sleep(2)
print(" ")
print("%s: 'Meow'"%Lynxname)
time.sleep(2)
print(" ")
print("The Black Knight prepares himself for revenge against you! It seemed he has gained an attribute!")
time.sleep(2)
print(" ")
P2 = Player("Black Knight", 16, 1.5)
P2.add_move("Greatsword Slash")
P2.add_move("Lifedrain")
P2.add_type("Darkness")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Black Knight: 'NO! I lost again to this kid! I won't forget this, i will return!' The Black Knight leaves.")
time.sleep(3)
print(" ")
print("%s: 'Why does that guy follow me around all the time?'"%nick)
time.sleep(3)
print(" ")
print("Greg: 'He wants that key of yours whippersnapper, although he probably thinks that it is for some treasure-filled chest. He does not realize that the key's function is far greater than that.'")
time.sleep(3)
print(" ")
print("%s: 'Over there! A spring! But i don't know if that water is healthy... and it's almost dried up...'"%nick)
time.sleep(3)
print(" ")
print("Greg: 'I'm thirsty youngster, let me drink some!'")
time.sleep(3)
print(" ")
print("*Greg sprints to the spring, and drinks the last bit of water in the spring. Suddenly, his body begins to change, his bones become denser, his skin becomes smoother, his hairs gain more colour. Greg has turned young!")
time.sleep(3)
print(" ")
print("%s: 'Wha-'"%nick)
time.sleep(1)
print(" ")
print("Greg: 'I'm young again, and i can talk normal now!'")
time.sleep(2)
print(" ")
print("%s: '...'"%nick)
time.sleep(2)
print(" ")
print("%s: 'Meow'"%Lynxname)
time.sleep(3)
print(" ")
print("*Boom!")
time.sleep(3)
print(" ")
print("%s & Greg: '?'"%nick)
print(" ")
print("%s: 'Meow?'"%Lynxname)
time.sleep(3)
print(" ")
print("As they turn around, they see a person with huge, flaming wings floating.")
time.sleep(3)
print(" ")
print("Demigod Ignis: 'You must be %s, i have been given the task to eliminate you! My creator does not want you to stop him, so you will perish now!'"%nick)
time.sleep(3)
print(" ")
P2 = Player("Demigod Ignis", 18, 1.1)
P2.add_move("Hellwheel")
P2.add_move("Demigod Wing Attack")
P2.add_type("Fire")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Demigod Ignis: 'Urgh, i haven't been hurt by any mortal this much, you will see me again mortal, and when you will, i will DESTROY you!' The demigod takes off.")
time.sleep(3)
print(" ")
print("%s: 'What was that?'"%nick)
time.sleep(2)
print(" ")
print("Greg: 'That was one of the elemental demigods. They were created by the evil overlord, and they serve him. I think the overlord is aware of your presence, %s.'"%nick)
time.sleep(2)
print(" ")
print("...")
time.sleep(4)
print(" ")
print("As %s, Greg and %s reach the end of the beach, they can see an opening of a cave. A number of shells inside the cave's walls indicate that this is a seaward cave. They head inside."%(nick, Lynxname))
time.sleep(3)
print(" ")
print("Once they're inside, they can see that on the other side is a massive, deep and bright-blue lake. They walk to the other end, when they are attacked by a swarm of bats!")
time.sleep(2)
print(" ")
print("%s: 'Ugh, get away from me!'"%nick)
time.sleep(2)
print(" ")
P2 = Player("Bat swarm", 15, 1.5)
P2.add_move("Lifedrain")
P2.add_type("Air")
battle(P1, P2)
time.sleep(2)
print(" ")
print("%s: 'That was annoying, luckily we made it out without any other troubles.'"%nick)
time.sleep(2)
print(" ")
print("Greg: 'That's right.'")
print(" ")
print("%s: 'Zzzz...'"%Lynxname)
time.sleep(4)
print(" ")
print("Our heroes have emerged from the cave, and they are near the giant lake now. All kinds of fish and coral can be clearly seen inside the lake. When %s tries to pass, a sawfish appeared! %s will have to battle it!"%(nick, nick))
time.sleep(2)
print(" ")
P2 = Player("Guarding Sawfish", 15, 1.3)
P2.add_move("Splash")
P2.add_move("Cut")
P2.add_type("Water")
battle(P1, P2)
time.sleep(2)
print(" ")
print("As the sawfish swims away, %s notices a pedestal in the middle of the lake. On it lies an Coral Key."%nick)
time.sleep(2)
print(" ")
print("%s: 'There it is!'"%nick)
print(" ")
print("Greg: 'Well done!'")
time.sleep(2)
print(" ")
print("But as %s and Greg approach the pedestal, something emerges from the water. When it surfaces, it lets out a mighty roar:"%nick)
time.sleep(2)
print("GrRoOAaRr!")
time.sleep(2)
print(" ")
print("It seems that is the Lake Guardian guarding the Coral Key. It looks like an giant dinosaur combined with a shark. %s will have to beat it to prove worthy as owner of the Key..."%nick)
time.sleep(4)
print(" ")
P2 = Player("Leviathan", 30, 0.45)
P2.add_move("Leviathan Hydro Storm")
P2.add_move("Frostbite")
P2.add_type("Water")
battle(P1, P2)
time.sleep(2)
print(" ")
print("%s has defeated the Leviathan. It stares at %s for a second, then dives underwater and vanishes, giving you access to the Key. You have gained the Coral Key!"%(nick, nick))
time.sleep(3)
print(" ")
print("You have gained the Coral Key! You now have the Void Key, the Forest Key and the Coral Key! Unobtained keys left: 4")
time.sleep(3)
print(" ")
print("You have leveled up! Your health and attack have increased, and you've learned a new skill!")
time.sleep(3)
print(" ")
P1.add_move(Moves(4))
P1.maxHealth = P1.maxHealth + 6
P1.attackPower = P1.attackPower + 1
time.sleep(3)
print(" ")
print("You have %s hp and %s attack now." %(P1.maxHealth, P1.attackPower))
time.sleep(3)
print(" ")
print("Greg: 'Well done kid, we only need four more keys before we can open the gates to evil.'")
time.sleep(3)
print(" ")
print("%s: 'Where do we head now?'"%nick)
time.sleep(3)
print(" ")
print("Greg: 'We should head to the Drought Desert now. Although no key is located there, the people there can train the chosen one aka you. After that, we will proceed to get the other keys.'")
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("%s, Greg and %s have arrived into the Drought Desert, where they can see an oasis city surrounded by a great wall. They are about to proceed through, when one of the guards comes down:"%(nick, Lynxname))
time.sleep(3)
print("Guard: 'Halt! We have heard of you, %s. Chosen one, let me test your strength in battle!'"%nick)
time.sleep(3)
print(" ")
P2 = Player("Desert Guard", 25, 1.5)
P2.add_move("Deityblade")
P2.add_move("Healing")
P2.add_type("Light")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Guard: 'That was a rough battle, you are the true chosen one %s!'"%nick)
time.sleep(3)
print(" ")
print("%s and Greg continue to proceed through the city."%nick)
time.sleep(3)
print(" ")
print("Our heroes have arrived at the desert palace, where they are awaited by a man covered in golden armor.")
time.sleep(3)
print(" ")
print("Golden Commander: 'Greetings, %s. We have all heard of your presence as the chosen one. How many keys do you have right now?'"%nick)
time.sleep(3)
print(" ")
print("%s: 'Well, i have three keys now.'"%nick)
time.sleep(3)
print(" ")
print("Golden Commander: 'So you four more keys hmm? I know where you should head next! Let me guide you to the right place!'")
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("And so, our heroes are guided by the golden commander and his group of horsemen. They are guided to some sort of mountain, when they are ambushed by a horde of goblins. %s will have to att-"%nick)
time.sleep(3)
print(" ")
print("Golden Commander: 'ATTACK!'")
time.sleep(3)
print(" ")
print("%s, Greg and %s watch, the horsemen brutally slaughter the goblins. A split second later, all goblins have been eliminated."%(nick, Lynxname))
time.sleep(3)
print(" ")
print("Golden Commander: 'You can proceed into the mountain now.'")
time.sleep(3)
print(" ")
print("Greg: 'I think it's best for you to go alone on this one, kid. I have claustrofobia, you see, and that means i don't want to go inside narrow caves and such. I will keep %s with me for now. Go get that key %s!'"%(Lynxname, nick))
time.sleep(3)
print(" ")
print("%s entered Hollow Mountain!"%nick)
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("%s has gone inside the mountain, watching out for any bats and such animals, when %s is attacked by a bear!"%(nick, nick))
time.sleep(3)
print(" ")
print("Grrroarrr!")
time.sleep(3)
print(" ")
print("%s: 'Aah!'"%nick)
time.sleep(3)
print(" ")
P2 = Player("Wild Bear", 20, 2)
P2.add_move("Slash")
P2.add_move("Rest")
battle(P1, P2)
time.sleep(3)
print(" ")
print("%s: 'Well, he's gone. I survived it.'"%nick)
time.sleep(3)
print(" ")
while True:
  Mountainchoice = input("As you go further, the cave splits in two directions, Left or Right. Where do you go?")
  if Mountainchoice in directions2:
    print (" ")
    print("You took the %s path."%Mountainchoice)
    time.sleep(1)
    if Mountainchoice == 'Left' or Mountainchoice == "l":
      print(" ")
      print("%s went the left path, only to be awaited by a golem covered in crystals! The golem attacks you!"%nick)
      P2 = Player("Crystal Golem", 25, 1.5)
      P2.add_move("Boulder Drop")
      P2.add_move("Crystal Jab")
      P2.add_type("Earth")
      print(" ")
      time.sleep(2)
      battle(P1, P2)
    elif Mountainchoice == 'Right' or Mountainchoice == "r":
      print(" ")
      print("%s went down the right path, but as %s proceded, a zombie was in his way. You will have to beat it!"%(nick, nick))
      P2 = Player("Zombie", 15, 2)
      P2.add_move("Astonish")
      P2.add_move("Foul Miasma")
      P2.add_type("Darkness")
      print(" ")
      time.sleep(2)
      battle(P1, P2)
    break
  else: 
    print ("Try again, my friend :)")
time.sleep(3)
print(" ")
print("%s: 'That tunnel was horrible, i guess the other one must have been horrible too.'"%nick)
time.sleep(3)
print(" ")
print("As %s walks through the tunnel, he sees an opening and goes through it. Then %s witnesses a plateau of grass and stone on the mountain. In the distance, %s can see another cave opening in the distance."%(nick,nick ,nick))
time.sleep(3)
print(" ")
print("%s: 'That should lead to the top of the mountain. I am close!'"%nick)
time.sleep(3)
print(" ")
print("But as %s tries to get there, a lizard on a single wheeler jumps out of nowhere and stands in the way. He then taunts %s with a dank meme. %s is enraged and battles it."%(nick, nick , nick))
time.sleep(3)
print(" ")
P2 = Player("Datboi", 40, 1.4)
P2.add_move("Meme")
P2.add_move("Roast")
P2.add_move("Hellwheel")
P2.add_type("Swag")
battle(P1, P2)
time.sleep(3)
print(" ")
print("%s: '>:( i'm glad that guy is gone, because he was pissing me off!'"%nick)
time.sleep(3)
print(" ")
print("But %s's break wasn't for long, as %s saw two people with large wings, comparible to the fire demigod Ignis. One has rocky wings, the other has feathery wings."%(nick, nick))
time.sleep(3)
print(" ")
print("Demigod Ventus: 'We are here to eliminate you, because demigod Ignis couldn't do it himself!' he chuckled.")
time.sleep(3)
print(" ")
print("Demigoddes Terra: 'Prepare for death, mortal!'")
time.sleep(3)
print(" ")
print("%s: 'Hey, that's not fair!'"%nick)
time.sleep(3)
print(" ")
P2 = Player("Demigoddes Terra", 30, 1.3)
P2.add_move("Demigod Wing Attack")
P2.add_move("Woodslam")
P2.add_type("Earth")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Demigoddes Terra: Argh! Ventus, get %s!'"%nick)
time.sleep(3)
print(" ")
print("Demigod Ventus: 'Come here %s, when i'm done with you, i will drop you off this mountain!'"%nick)
time.sleep(3)
print(" ")
P2 = Player("Demigod Ventus", 30, 1.3)
P2.add_move("Demigod Wing Attack")
P2.add_move("Airjet")
P2.add_type("Air")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Demigod Ventus: 'Urgh, you little bastard! Come over he-'")
time.sleep(3)
print(" ")
print("Suddenly, an arrow pierced through one of Ventus' wings. He cries in pain, in which he takes off. Terra takes off as well and they're gone.")
time.sleep(3)
print(" ")
print("%s: 'Wait, who was that?'"%nick)
time.sleep(3)
print(" ")
while (True):
  nick2 = input("(Type stranger's name here)")
  if len(nick2) > 0:
    if nick2 == nick:
      print("(You can't choose the same name as your main character!)")
    else:
      if nick2 == "Owen" and nick == "Cesar":
        print(" ")
        print("%s: 'My friend!' %s: 'Can i come with you, %s?'"%(nick, nick2, nick))
      elif nick == "Owen" and nick2 == "Cesar":
        print(" ")
        print("%s: 'There is that soup chicken again, %s! %s:'Lemme come with you!'"%(nick, nick2, nick2))
      else:
        print(" ")
        print("%s: 'Hello there, chosen one. My name is %s, and i have heard of your strength. I am here to join you in your quest."%(nick2, nick2))
      break
  else:
    print("Try again, my friend :)")
time.sleep(3)
print(" ")
print("%s: 'Uhm, okay? I guess you could come along?'"%nick)
time.sleep(3)
print(" ")
print("%s: 'Sweet!'"%nick2)
time.sleep(3)
print(" ")
print("%s has joined the party!"%nick2)
SecretP = True
P3 = Player(nick2, 18, 3)
P3.add_type("Unknown")
P3.add_move("Arrowfire")
P3.add_move("Brewing")
time.sleep(3)
print(" ")
if nick2 == "Woot Shiny Drampa":
  print(" ")
  print("Welcome Owen or Cesar, gotta go fast")
  P3 = Player(nick2, 18, 500)
time.sleep(3)
print(" ")
print("And so, with a new addition to the party, %s and %s go through the other opening, but before they reach the top, a goblin stands in the way!"%(nick, nick2))
time.sleep(3)
print(" ")
print("%s: 'Let me handle this.'"%nick2)
P2 = Player("Goblin", 15, 1.5)
P2.add_move("GoblinKnife")
P2.add_move("Cut")
battle(P3, P2)
time.sleep(3)
print(" ")
print("%s: 'That is that, let's go!'"%nick2)
time.sleep(3)
print(" ")
print("%s and %s have reached the top of Hollow Mountain. They can see a pedestal with a key lying on it that is shaped like a feather. As they approach the key, a huge bird-like creature appears. It appears to be a eagle."%(nick, nick2))
time.sleep(3)
print(" ")
print("Khwaaaaaah!")
time.sleep(3)
print(" ")
print("%s: 'Since you are the chosen one, you will have to prove yourself to the guardian.'"%nick2)
time.sleep(3)
print(" ")
print("The mighty eagle attacks %s!"%nick)
time.sleep(3)
print(" ")
P2 = Player("Mighty Eagle", 25, 1.5)
P2.add_move("Tornado")
P2.add_move("Eagle Sky Crash")
P2.add_type("Air")
battle(P1, P2)
time.sleep(3)
print(" ")
print("%s has defeated the eagle guardian. It flies away, and %s walks over to pick up the key."%(nick, nick))
time.sleep(3)
print(" ")
print("You have gained the Feather Key! You now have the Void, Forest, Coral and Feather Key! Unobtained keys left: 3")
time.sleep(3)
print(" ")
print("You have leveled up! Your attack and health, increased, your aura has grown, and you have learned a new skill!")
P1.powerUp(2)
P1.add_move(Moves(5))
P1.maxHealth = P1.maxHealth + 4
P1.attackPower = P1.attackPower + 0.5
time.sleep(3)
print(" ")
print("You have %s hp and %s attack now." %(P1.maxHealth, P1.attackPower))
time.sleep(3)
print(" ")
print("%s: 'Let's head back to the desert palace, my other friends are waiting for me there.'"%nick)
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("%s and %s have arrived in the desert palace, where Greg, %s and the golden commander are waiting for them."%(nick, nick2, Lynxname))
time.sleep(3)
print(" ")
print("Golden Commander: 'I see you have gained the Feather Key, and you've brought a stranger with you, %s!'"%nick)
time.sleep(3)
print("")
print("%s: 'I'm %s, and i'm on a quest to assist the chosen one in searching out the evil overlord and defeat him.'"%(nick2, nick2))
time.sleep(3)
print(" ")
print("Suddenly, our heroes hear loud yelling from within the desert city. They all sprint to that direction, only to find a well-known figure wreaking havoc in the townsquare.")
time.sleep(3)
print(" ")
print("Black Knight: 'Where is that kid?! I will take my sweet revenge on %s!'"%nick)
time.sleep(3)
print(" ")
print("%s: 'Why do you keep chasing me around anyway?'"%nick)
time.sleep(3)
print(" ")
print("Black Knight: 'Because i want to prove that i can beat the kid that i lost to during that one time, and i want that key of yo-' 'hey, you have 4 keys now, i will take them all!'")
time.sleep(3)
print(" ")
P2 = Player("Black Knight", 30, 2.5)
P2.add_move("Greatsword Slash")
P2.add_move("Lifedrain")
P2.add_move("Riftsplit")
P2.add_type("Darkness")
battle(P1, P2)
time.sleep(3)
print(" ")
print("Black Knight: 'NO! GIVE ME THAT KEY OR DIE-'")
time.sleep(3)
print(" ")
print("Golden Commander:'Shoo, brigand! Guards, throw him out of the city!'")
time.sleep(3)
print(" ")
print("Our heroes witness the desert city guards taking the Black Knight out of the city. The Black Knight then steps on his horse.")
time.sleep(3)
print(" ")
print("Black Knight: 'This is not over, %s! I will find you again, and i will grab those keys from you!' he leaves."%nick)
time.sleep(3)
print(" ")
print("%s: 'He is probably coming back anyway.'"%nick)
time.sleep(5)
print(" ")
print("Some, time later, a desert guard is standing on guard with some ale in his hand. He has not been spotting any enemies so far. However, when takes a big gulp of his drink, he can see a massive army of demons marching to the desert city.")
time.sleep(3)
print(" ")
print("Desert Guard: 'ALARM! A army of demons is marching, and they're on their way to us!'")
time.sleep(3)
print(" ")
print("Our heroes run over to the gates, where they can see a giant army of demon soldiers marching. There must be at least a thousand demons in there.")
time.sleep(3)
print(" ")
print("Golden Commander: 'We have to defend our beloved city from this invasion! %s and %s, take care of the left flank, while I and my horsemen will take care of the right flank. Let's go!'"%(nick, nick2))
time.sleep(3)
print(" ")
print("%s: 'No time to lose, let's go!'"%nick2)
time.sleep(3)
print(" ")
print("%s stands before one hundred demons. %s has to defeat them!"%(nick, nick))
time.sleep(3)
print(" ")
P2 = Player("100 Demons", 50, 2)
P2.add_move("Lifedrain")
P2.add_move("Cut")
P2.add_type("Darkness")
battle(P1, P2)
time.sleep(3)
print(" ")
print("%s has defeated a lot of demons. However, there are still a lot of demons standing before %s!"%(nick, nick2))
time.sleep(3)
print(" ")
P2 = Player("30 Demons", 20, 1.25)
P2.add_move("Lifedrain")
P2.add_move("Cut")
P2.add_type("Darkness")
battle(P3, P2)
time.sleep(3)
print(" ")
print("%s and %s have defeated all demons on their side, and it looks like the golden commander and his troops are defeating the demons on their side as well!"%(nick, nick2))
time.sleep(3)
print(" ")
print("Greg: 'Well done guys!'")
time.sleep(3)
print(" ")
print("But as they celebrate their victory, a dark portal appeared, and a massive being emerged from it. Then, the evil being looks at %s."%nick)
time.sleep(3)
print(" ")
print("Evil Overlord: 'I will not allow you to stop me, mortal!'")
time.sleep(3)
print(" ")
print("As the overlord said that, a massive black aura glows around him, and he charges an attack. Then, he fires off a beam of pure hatred and darkness underneath %s, which results in a black hole sucking %s in! Just before %s is sucked in, the overlord grabs the keys."%(nick, nick, nick))
time.sleep(3)
print(" ")
print("Greg, Golden Commander, %s: 'NOOOOOOOOOO!'"%nick2)
print(" ")
print("%s: 'Meow? :('"%Lynxname)
time.sleep(3)
print(" ")
print("%s: 'Can't...breathe...'"%nick)
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("%s wakes up after a long slumber, waking up in a cold, dark and dread land. %s can looks up, and sees that there is no sky, but a empty void instead."%(nick, nick))
time.sleep(3)
print(" ")
print("%s: 'Where am i?'"%nick)
time.sleep(3)
print(" ")
print("As %s manages to get up and recover some strength back, a ghostly creature attacks!"%nick)
time.sleep(3)
print(" ")
P2 = Player("Marsh Fire", 35, 2)
P2.add_move("Ignite")
P2.add_move("Astonish")
P2.add_type("Fire")
battle(P1, P2)
time.sleep(3)
print(" ")
print("%s defeated the ghostly creature, and it falls apart in embers and smoke. %s then looks in the distance, where a maze can be seen. %s heads to the maze in the distance"%(nick, nick, nick))
time.sleep(3)
print(" ")
print("As %s is on the way, %s can see the silhouette of a man walking strangly, holding a giant sword. When it comes closer it looks like it has died a long time ago, and it attacks %s!"%(nick, nick, nick))
time.sleep(3)
print(" ")
P2 = Player("Fallen Man", 40, 2.5)
P2.add_move("Greatsword Slash")
P2.add_move("Foul Miasma")
P2.add_type("Darkness")
battle(P1, P2)
time.sleep(3)
print(" ")
print("As the man-like creature is defeated, it's flesh rots away, leaving a pile of bones and the sword behind.")
time.sleep(3)
print(" ")
print("%s: 'Why does everything in this world fall apart once i beat it?'"%nick)
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("After some walking, %s has reached the maze."%nick)
time.sleep(3)
print(" ")
#mazecombo: RLRL
while True:
  mazechoice = input("As %s reached the entrance of the maze, three openings can be seen; one on the left; one straight forward; one on the right. Where do you head? Left, Straight or Right?"%nick)
  if mazechoice in directions3:
    print(" ")
    print("You took the %s path."%mazechoice)
    time.sleep(3)
    if mazechoice == "Left" or mazechoice == "l":
      time.sleep(3)
      print(" ")
      print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
      time.sleep(3)
      print(" ")
      print("%s: 'Ah come on!'"%nick)
    elif mazechoice == "Straight" or mazechoice == "s":
      time.sleep(3)
      print(" ")
      print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
      time.sleep(3)
      print(" ")
      print("%s: 'Ah come on!'"%nick)
    elif mazechoice == "Right" or mazechoice == "r":
      time.sleep(3)
      print(" ")
      mazechoice = input("As you walk down this path, you feel sure that you made the right decision here. Eventually, the path splits in three ways again. Where do you head? Left, Straight or Right?")
      if mazechoice in directions3:
        print(" ")
        print("You took the %s path."%mazechoice)
        if mazechoice == "Left" or mazechoice == "l":
          time.sleep(3)
          print(" ")
          print("%s: 'How long is this maze?'"%nick)
          time.sleep(3)
          print(" ")
          mazechoice = input("As you walk down this path, you know it was the right choice again. Again, the path splits in three ways. Where do you head? Left, Straight or Right?")
          if mazechoice in directions3:
            print(" ")
            print("You took the %s path."%mazechoice)
            if mazechoice == "Left" or mazechoice == "l":
              time.sleep(3)
              print(" ")
              print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
              time.sleep(3)
              print(" ")
              print("%s: '****(bad words)'"%nick)
            elif mazechoice == "Straight" or mazechoice == "s":
              time.sleep(3)
              print(" ")
              print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
              time.sleep(3)
              print(" ")
              print("%s: '****(bad words)'"%nick)
            elif mazechoice == "Right" or mazechoice == "r":
              time.sleep(3)
              print(" ")
              mazechoice = input("As you walk down the path, you can see the other side of the maze. You are almost there! At last, the path splits in three ways. Where do you head? Left, Straight or Right?")
              if mazechoice in directions3:
                print(" ")
                print("You took the %s path."%mazechoice)
                if mazechoice == "Left" or mazechoice == "l":
                  time.sleep(3)
                  print(" ")
                  print("As you walk down this last path, you can see the exit of the maze.")
                  time.sleep(3)
                  print(" ")
                  print("%s: 'Finally!'"%nick)
                  time.sleep(3)
                  print(" ")
                  print("But as you proceed, some sort of golem blocks the way. You have to battle it to get out of the maze!")
                  time.sleep(3)
                  print(" ")
                  P2 = Player("Maze Golem", 35, 2)
                  P2.add_move("Boulder Drop")
                  P2.add_move("Riftsplit")
                  P2.add_type("Darkness")
                  battle(P1, P2)
                  time.sleep(3)
                  print(" ")
                  print("You defeated the golem! It steps aside, and you finally exited the maze!")
                  break
                elif mazechoice == "Straight" or mazechoice == "s":
                  time.sleep(3)
                  print(" ")
                  print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
                  time.sleep(3)
                  print(" ")
                  print("%s: ':-;'"%nick)
                elif mazechoice == "Right" or mazechoice == "r":
                  time.sleep(3)
                  print(" ")
                  print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
                  time.sleep(3)
                  print(" ")
                  print("%s: ':-;'"%nick)
        elif mazechoice == "Straight" or mazechoice == "s":
          time.sleep(3)
          print(" ")
          print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
          time.sleep(3)
          print(" ")
          print("%s: 'You gotta be kidding me!'"%nick)
        elif mazechoice == "Right" or mazechoice == "r":
          time.sleep(3)
          print(" ")
          print("As you walk down this path, you start losing your oriëntation, and before you know it, you are at the beginning again...")
          time.sleep(3)
          print(" ")
          print("%s: 'You gotta be kidding me!'"%nick)
  else:
    print(" ")
    print("Try again, my friend :)")
time.sleep(3)
print(" ")
print("%s finally exited  the maze, and walks further. %s can see some kind of ancient tower poking out of the ground not far from here. Suddenly, %s is ambushed by a gorilla!"%(nick, nick, nick))
time.sleep(3)
print(" ")
P2 = Player("Harambe", 35, 3)
P2.add_move("Meme")
P2.add_move("Roast")
P2.add_move("Slash")
P2.add_type("Swag")
battle(P1, P2)
time.sleep(3)
print(" ")
print("After %s defeated Harambe, it fled."%nick)
time.sleep(3)
print(" ")
print("%s: 'So this is where the dead go?'"%nick)
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("As %s nearly reached the tall ancient tower, some sort of temple stands in the way. It says:"%nick)
time.sleep(2)
print(" ")
print("'Choose wisely and defeat the guardian, and the blessing is yours.'")
time.sleep(3)
print(" ")
while True:
  Underworldchoice = input("Which way do you go? Left or Right?")
  if Underworldchoice in directions2:
    print (" ")
    print("You took the %s path."%Underworldchoice)
    time.sleep(1)
    if Underworldchoice == 'Left' or Underworldchoice == "l":
      print(" ")
      time.sleep(3)
      print("A fire elemental is in the way!")
      P2 = Player("Fire Elemental", 50, 0.5)
      P2.add_move("Lavaflux")
      P2.add_move("Monolith Beam")
      P2.add_type("Fire")
      battle(P1, P2)
      time.sleep(3)
      print(" ")
      print("%s defeated the fire elemental, and as it vanishes, you can see a red light at the end of the path. The red light then suddenly plunges into your chest, and for some reason, you feel more powerful."%nick)
      time.sleep(5)
      print(" ")
      P1.attackPower = P1.attackPower + 1
      print("%s's attack went up! %s has %s attack now."%(nick, nick, P1.attackPower))
      break
    elif Underworldchoice == 'Right' or Underworldchoice == "r":
      print(" ")
      time.sleep(3)
      print("A water elemental stands in the way!")
      P2 = Player("Water Elemental", 50, 0.5)
      P2.add_move("Frostbite")
      P2.add_move("Monolith Beam")
      P2.add_type("Water")
      battle(P1, P2)
      time.sleep(3)
      print(" ")
      print("%s defeated the water elemental, and as it vanishes, you can see a blue light at the end of the path. The blue light then suddenly plunges into your chest, and for some reason, you feel more healthy now."%nick)
      time.sleep(5)
      print(" ")
      P1.maxHealth = P1.maxHealth + 3
      print("%s's health went up! %s has %s hp now."%(nick, nick, P1.maxHealth))
      break
    else:
      print("Try again, my friend :)")
time.sleep(3)
print(" ")
print("%s has exited the temple, with one of the two blessings. %s walks over to the ancient tower..."%(nick, nick))
time.sleep(5)
print(" ")
print("...")
time.sleep(3)
print(" ")
print("As %s reached the tower, %s can see six silhouettes of people around the tower. %s walks over to them."%(nick, nick, nick))
time.sleep(3)
print(" ")
print("Stranger: 'Is that you, the chosen one?'")
time.sleep(3)
print(" ")
print("%s: 'Yes.'"%nick)
time.sleep(3)
print(" ")
print("Stranger: 'Then there is still hope! We must send you back to earth! But let us teach you a skill that will help you against the overlord, %s!'"%nick)
time.sleep(3)
print(" ")
print("As the stranger said that, they all start to perform some ritual. Suddenly, energy is pouring from all six of them, and it pours into you!")
time.sleep(3)
print(" ")
print("You have awoken your inner elemental power, and you have learned a limit break!")
LimitAchieve == True
P1.add_move(Moves(6))
time.sleep(3)
print(" ")
